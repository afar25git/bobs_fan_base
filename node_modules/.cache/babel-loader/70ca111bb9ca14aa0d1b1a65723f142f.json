{"ast":null,"code":"import _regeneratorRuntime from \"/Users/afar25/GA/Projects/bobs_fan_base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/afar25/GA/Projects/bobs_fan_base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/Users/afar25/GA/Projects/bobs_fan_base/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/afar25/GA/Projects/bobs_fan_base/src/components/CharacterDetails.jsx\";\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nvar CharacterDetails = function CharacterDetails(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      characterDetails = _useState2[0],\n      setCharacterDetails = _useState2[1];\n\n  useEffect(function () {\n    var getDetails = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return axios.get(\"https://rickandmortyapi.com/api/character\");\n\n              case 2:\n                response = _context.sent;\n                setCharacterDetails(response.data.results);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getDetails() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getDetails();\n  }, [props.selectedCharacter]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 17\n    }\n  }, props.character ? props.character.map(function (character) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"character-card\",\n      key: character.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"\".concat(character.image),\n      alt: \"poster\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 33\n      }\n    }, character.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }\n    }, character.status), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 33\n      }\n    }, \"From: \", character.origin.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 33\n      }\n    }, \"Species: \", character.species));\n  }) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 30\n    }\n  }, \"you\")), \")\");\n};\n\nexport default CharacterDetails;","map":{"version":3,"sources":["/Users/afar25/GA/Projects/bobs_fan_base/src/components/CharacterDetails.jsx"],"names":["React","useState","useEffect","axios","CharacterDetails","props","characterDetails","setCharacterDetails","getDetails","get","response","data","results","selectedCharacter","character","map","id","image","name","status","origin","species"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,KAAD,EAAW;AAAA,kBAEgBJ,QAAQ,CAAC,IAAD,CAFxB;AAAA;AAAA,MAEzBK,gBAFyB;AAAA,MAEPC,mBAFO;;AAIhCL,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMM,UAAU;AAAA,0EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQL,KAAK,CAACM,GAAN,6CADR;;AAAA;AACTC,gBAAAA,QADS;AAEfH,gBAAAA,mBAAmB,CAACG,QAAQ,CAACC,IAAT,CAAcC,OAAf,CAAnB;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAAVJ,UAAU;AAAA;AAAA;AAAA,OAAhB;;AAIAA,IAAAA,UAAU;AACb,GANQ,EAMN,CAACH,KAAK,CAACQ,iBAAP,CANM,CAAT;AAQA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEQ;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQR,KAAK,CAACS,SAAN,GACAT,KAAK,CAACS,SAAN,CAAgBC,GAAhB,CAAoB,UAACD,SAAD;AAAA,wBAEpB;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,GAAG,EAAEA,SAAS,CAACE,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,YAAKF,SAAS,CAACG,KAAf,CAAR;AAAgC,MAAA,GAAG,EAAC,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAEQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,SAAS,CAACI,IAAf,CAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIJ,SAAS,CAACK,MAAd,CAHR,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAUL,SAAS,CAACM,MAAV,CAAiBF,IAA3B,CAJR,eAKQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAaJ,SAAS,CAACO,OAAvB,CALR,CAFoB;AAAA,GAApB,CADA,gBAWK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAbb,CAFR,MADJ;AAwBH,CApCD;;AAsCA,eAAejB,gBAAf","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport axios from \"axios\"\n\nconst CharacterDetails = (props) => {\n\n    const [characterDetails, setCharacterDetails] = useState(null)\n\n    useEffect(() => {\n        const getDetails = async () => {\n            const response = await axios.get(`https://rickandmortyapi.com/api/character`)\n            setCharacterDetails(response.data.results)\n        }\n        getDetails()\n    }, [props.selectedCharacter])\n\n    return (\n        <div>\n            \n                <div className=\"details\">\n                    {\n                        props.character?\n                        props.character.map((character) => (\n                            \n                        <div className=\"character-card\" key={character.id}>\n                            <img src={`${character.image}`} alt=\"poster\" />\n                                <h2>{character.name}</h2>\n                                <p>{character.status}</p>\n                                <p>From: {character.origin.name}</p>\n                                <p>Species: {character.species}</p>\n                        </div>\n                        \n                        )) : <p>you</p>\n                    }\n                </div>\n            )\n            \n        </div>\n)\n\n}\n\nexport default CharacterDetails"]},"metadata":{},"sourceType":"module"}